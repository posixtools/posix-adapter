#!/bin/sh
#==============================================================================
#
#   __       _     _
#  / _| ___ | | __| |
# | |_ / _ \| |/ _` |
# |  _| (_) | | (_| |
# |_|  \___/|_|\__,_|
#==============================================================================
# TOOL: FOLD
#==============================================================================

_posix_adapter__fold__print_help() {
  >&2 echo '=============================================================================='
  >&2 echo ''
  >&2 echo '  posix_adapter__fold --help'
  >&2 echo '  posix_adapter__fold [--spaces] --width <line_width>'
  >&2 echo ''
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Execution mapping function for the "fold" command line tool with a'
  >&2 echo ' uniform interface.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Globals:'
  >&2 echo '   None'
  >&2 echo ' Options:'
  >&2 echo '   --help - Prints out the help message and exits.'
  >&2 echo '   --spaces - Use the fold compatible -s flag to break at spaces'
  >&2 echo '   --width <line_width> - Use the fold compatible -w flag.'
  >&2 echo ' Arguments:'
  >&2 echo '   None'
  >&2 echo ' STDIN:'
  >&2 echo '   Input passed to the mapped command.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Output variables:'
  >&2 echo '   None'
  >&2 echo ' STDOUT:'
  >&2 echo '   Output of the mapped command.'
  >&2 echo ' STDERR:'
  >&2 echo '   Error output of the mapped command.'
  >&2 echo ' Status:'
  >&2 echo '   0  - Call was successful.'
  >&2 echo '   .. - Call failed with its error status.'
  >&2 echo '   98 - Invalid parameter configuration.'
  >&2 echo '   99 - No compatible call style was found.'
  >&2 echo '=============================================================================='
}

posix_adapter__fold() {
  posix_adapter__flag__spaces='0'

  posix_adapter__flag__width='0'
  posix_adapter__value__width=''

  while [ "$#" -gt '0' ]
  do
    case "$1" in
      --spaces)
        posix_adapter__flag__spaces='1'
        shift
        ;;
      --width)
        posix_adapter__flag__width='1'
        posix_adapter__value__width="$2"
        shift
        shift
        ;;
      --[!-]*)
        _posix_adapter__fold__report_invalid_parameter \
          "Unexpected option '${1}'!" \
          'You can only use the available options.'
        ;;
      -[!-]*)
        _posix_adapter__fold__report_invalid_parameter \
          "Invalid single dashed option '${1}'!" \
          "posix_adapter only uses double dashed options like '--option'."
        ;;
      *)
        _posix_adapter__fold__report_invalid_parameter \
          'Unexpected parameter!' \
          "Parameter '${1}' is unexpected!"
        ;;
    esac
  done

  # Assembling the decision string.
  # ,----- spaces
  # |,---- width
  # 00
  posix_adapter__decision="${posix_adapter__flag__spaces}"
  posix_adapter__decision="${posix_adapter__decision}${posix_adapter__flag__width}"

  _posix_adapter__fold__common \
    "$posix_adapter__decision" \
    "$posix_adapter__value__width"
}

#==============================================================================
# Common based call mapping function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] decision_string - String that decodes the optional parameter presence.
#   [2] value_width - Value for optional width parameter.
# STDIN:
#   Input passed to the mapped command.
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   Mapped command's output.
# STDERR:
#   Mapped command's error output. Mapping error output.
# Status:
#   0  - Call succeeded.
#   .. - Call failed with it's error status
#==============================================================================
_posix_adapter__fold__common() {
  posix_adapter__decision_string="$1"
  posix_adapter__value__width="$2"

  case "$posix_adapter__decision_string" in
  # ,----- spaces
  # |,---- width
    00)
      fold \
        \
        \

      ;;
  # ,----- spaces
  # |,---- width
    01)
      fold \
        \
        -w "$posix_adapter__value__width" \

      ;;
  # ,----- spaces
  # |,---- width
    10)
      fold \
        -s \
        \

      ;;
  # ,----- spaces
  # |,---- width
    11)
      fold \
        -s \
        -w "$posix_adapter__value__width" \

      ;;
    *)
      _posix_adapter__fold__report_incompatible_call \
        'Unexpected parameter combination!' \
        'You can only use the available options.'
      ;;
  esac
}

#==============================================================================
# Invalid parameter error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   98  - The function will terminate the execution.
#==============================================================================
_posix_adapter__fold__report_invalid_parameter() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | posix_adapter__fold | reason  | ${reason}"
  >&2 echo "ERROR | posix_adapter__fold | details | ${details}"
  _posix_adapter__fold__print_help
  exit 98
}

#==============================================================================
# Incompatible call error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   99  - The function will terminate the execution.
#==============================================================================
_posix_adapter__fold__report_incompatible_call() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | posix_adapter__fold | reason  | ${reason}"
  >&2 echo "ERROR | posix_adapter__fold | details | ${details}"
  _posix_adapter__fold__print_help
  exit 99
}

#==============================================================================
# ENTRY POINT
#==============================================================================

# If the script is called directly, call the internal function.
case $0 in
  *posix_adapter__fold)
    posix_adapter__fold "$@"
    ;;
esac
