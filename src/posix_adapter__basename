#!/bin/sh
#==============================================================================
#   _
#  | |__   __ _ ___  ___ _ __   __ _ _ __ ___   ___
#  | '_ \ / _` / __|/ _ \ '_ \ / _` | '_ ` _ \ / _ \
#  | |_) | (_| \__ \  __/ | | | (_| | | | | | |  __/
#  |_.__/ \__,_|___/\___|_| |_|\__,_|_| |_| |_|\___|
#==============================================================================
# TOOL: BASENAME
#==============================================================================

_posix_adapter__basename__help() {
  >&2 echo '=============================================================================='
  >&2 echo ''
  >&2 echo '  posix_adapter__basename --help'
  >&2 echo '  posix_adapter__basename <path>'
  >&2 echo ''
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Execution mapping function for the "basename" command line tool with a'
  >&2 echo ' uniform interface.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Globals:'
  >&2 echo '   None'
  >&2 echo ' Options:'
  >&2 echo '   None'
  >&2 echo ' Arguments:'
  >&2 echo '   [1] path - Path from which the basename should be separated.'
  >&2 echo ' STDIN:'
  >&2 echo '   Standard input can be used to pass a path.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Output variables:'
  >&2 echo '   None'
  >&2 echo ' STDOUT:'
  >&2 echo '   Output of the mapped command.'
  >&2 echo ' STDERR:'
  >&2 echo '   Error output of the mapped command.'
  >&2 echo ' Status:'
  >&2 echo '   0  - Call was successful.'
  >&2 echo '   .. - Call failed with its error status.'
  >&2 echo '   98 - Invalid parameter configuration.'
  >&2 echo '   99 - No compatible call style was found.'
  >&2 echo '=============================================================================='
}

posix_adapter__basename() {
  if [ "$#" -eq 0 ]
  then
    # basename does not support the standard input by it's own, so helping it
    # out with xargs..
    xargs basename
  else
    if [ "$#" -gt 1 ]
    then
      _posix_adapter__basename__report_invalid_parameter \
        'Unexpected parameter count!' \
        "Only 1 parameter is expected, got ${#}!"
    fi

    case "$1" in
      --help)
        _posix_adapter__basename__help
        exit 0
        ;;
      --[!-]*)
        _posix_adapter__basename__report_invalid_parameter \
          "Unexpected option '${1}'!" \
          'This function does not take options.'
        ;;
      -[!-]*)
        _posix_adapter__basename__report_invalid_parameter \
          "Invalid single dashed option '${1}'!" \
          "posix_adapter only uses double dashed options like '--option'."
        ;;
    esac

    basename "$1"
  fi
}

#==============================================================================
# Invalid parameter error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   98  - The function will terminate the execution.
#==============================================================================
_posix_adapter__basename__report_invalid_parameter() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | posix_adapter__basename | reason  | ${reason}"
  >&2 echo "ERROR | posix_adapter__basename | details | ${details}"
  _posix_adapter__basename__help
  exit 98
}

#==============================================================================
# Incompatible call error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   99  - The function will terminate the execution.
#==============================================================================
_posix_adapter__basename__report_incompatible_call() {
  ___reason="$1"
  ___details="$2"
  >&2 echo "ERROR | posix_adapter__basename | reason  | ${___reason}"
  >&2 echo "ERROR | posix_adapter__basename | details | ${___details}"
  _posix_adapter__basename__help
  exit 99
}

#==============================================================================
# ENTRY POINT
#==============================================================================

# If the script is called directly, call the internal function.
case $0 in
  *posix_adapter__basename)
    posix_adapter__basename "$@"
    ;;
esac
