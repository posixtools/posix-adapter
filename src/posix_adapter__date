#!/bin/sh
#==============================================================================
#      _       _
#   __| | __ _| |_ ___
#  / _` |/ _` | __/ _ \
# | (_| | (_| | ||  __/
#  \__,_|\__,_|\__\___|
#==============================================================================
# TOOL: DATE
#==============================================================================

_posix_adapter__date__print_help() {
  >&2 echo '=============================================================================='
  >&2 echo ''
  >&2 echo '  posix_adapter__date --help'
  >&2 echo '  posix_adapter__date <format_string>'
  >&2 echo ''
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Execution mapping function for the "date" command line tool with a uniform'
  >&2 echo ' interface.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Globals:'
  >&2 echo '   None'
  >&2 echo ' Options:'
  >&2 echo '   --help - Prints out the help message and exits.'
  >&2 echo ' Arguments:'
  >&2 echo '   [1] format_string - Format string the date should be generated from.'
  >&2 echo ' STDIN:'
  >&2 echo '   Input passed to the mapped command.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Output variables:'
  >&2 echo '   None'
  >&2 echo ' STDOUT:'
  >&2 echo '   Output of the mapped command.'
  >&2 echo ' STDERR:'
  >&2 echo '   Error output of the mapped command.'
  >&2 echo ' Status:'
  >&2 echo '   0  - Call was successful.'
  >&2 echo '   .. - Call failed with its error status.'
  >&2 echo '   98 - Invalid parameter configuration.'
  >&2 echo '   99 - No compatible call style was found.'
  >&2 echo '=============================================================================='
}

posix_adapter__date() {
  if [ "$#" -eq 0 ]
  then
    _posix_adapter__date__report_invalid_parameter \
      'Missing parameter!' \
      'A singular <format> parameter was expected!'
  elif [ "$#" -ne 1 ]
  then
    _posix_adapter__date__report_invalid_parameter \
      'Unexpected parameter count!' \
      "Only 1 parameter is expected, got ${#}!"
  fi

  case "$1" in
    --[!-]*)
      _posix_adapter__date__report_invalid_parameter \
        "Unexpected option '${1}'!" \
        'This function does not take options.'
      ;;
    -[!-]*)
      _posix_adapter__date__report_invalid_parameter \
        "Invalid single dashed option '${1}'!" \
        "posix_adapter only uses double dashed options like '--option'."
      ;;
  esac

  date "$1"
}

#==============================================================================
# Invalid parameter error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   98  - The function will terminate the execution.
#==============================================================================
_posix_adapter__date__report_invalid_parameter() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | posix_adapter__date | reason  | ${reason}"
  >&2 echo "ERROR | posix_adapter__date | details | ${details}"
  _posix_adapter__date__print_help
  exit 98
}

#==============================================================================
# Incompatible call error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   99  - The function will terminate the execution.
#==============================================================================
_posix_adapter__date__report_incompatible_call() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | posix_adapter__date | reason  | ${reason}"
  >&2 echo "ERROR | posix_adapter__date | details | ${details}"
  _posix_adapter__date__print_help
  exit 99
}

#==============================================================================
# ENTRY POINT
#==============================================================================

# If the script is called directly, call the internal function.
case $0 in
  *posix_adapter__date)
    posix_adapter__date "$@"
    ;;
esac
