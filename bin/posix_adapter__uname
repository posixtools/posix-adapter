#!/bin/sh
#==============================================================================
#
#  _   _ _ __   __ _ _ __ ___   ___
# | | | | '_ \ / _` | '_ ` _ \ / _ \
# | |_| | | | | (_| | | | | | |  __/
#  \__,_|_| |_|\__,_|_| |_| |_|\___|
#==============================================================================
# TOOL: UNAME
#==============================================================================

TOOL_NAME='posix_adapter__uname'

_print_help() {
  >&2 echo '=============================================================================='
  >&2 echo ''
  >&2 echo '  posix_adapter__uname --help'
  >&2 echo '  posix_adapter__uname [--kernel-name] [--kernel-release] [--machine]'
  >&2 echo ''
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Execution mapping function for the "uname" command line tool with a uniform'
  >&2 echo ' interface.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Globals:'
  >&2 echo '   None'
  >&2 echo ' Options:'
  >&2 echo '   --help - Prints out the help message and exits.'
  >&2 echo '   --kernel-name - uname compatible kernel name flag.'
  >&2 echo '   --kernel-release - uname compatible kernel release flag.'
  >&2 echo '   --machine - uname compatible machine flag.'
  >&2 echo ' Arguments:'
  >&2 echo '   None'
  >&2 echo ' STDIN:'
  >&2 echo '   None'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Output variables:'
  >&2 echo '   None'
  >&2 echo ' STDOUT:'
  >&2 echo '   Output of the mapped command.'
  >&2 echo ' STDERR:'
  >&2 echo '   Error output of the mapped command.'
  >&2 echo ' Status:'
  >&2 echo '   0  - Call was successful.'
  >&2 echo '   .. - Call failed with its error status.'
  >&2 echo '   98 - Invalid parameter configuration.'
  >&2 echo '   99 - No compatible call style was found.'
  >&2 echo '=============================================================================='
}

_posix_adapter__uname() {
  posix_adapter__flag__kernel_name='0'
  posix_adapter__flag__kernel_release='0'
  posix_adapter__flag__machine='0'

  while [ "$#" -gt '0' ]
  do
    case "$1" in
      --kernel-name)
        posix_adapter__flag__kernel_name='1'
        shift
        ;;
      --kernel-release)
        posix_adapter__flag__kernel_release='1'
        shift
        ;;
      --machine)
        posix_adapter__flag__machine='1'
        shift
        ;;
      --[!-]*)
        _report_invalid_parameter \
          "Unexpected option '${1}'!" \
          'You can only use the available options.'
        ;;
      -[!-]*)
        _report_invalid_parameter \
          "Invalid single dashed option '${1}'!" \
          "posix_adapter only uses double dashed options like '--option'."
        ;;
      *)
        _report_invalid_parameter \
          'Unexpected parameter!' \
          "Parameter '${1}' is unexpected!"
        ;;
    esac
  done

  # Assembling the decision string.
  # ,------ kernel_name
  # |,----- kernel_release
  # ||,---- machine
  # 000
  posix_adapter__decision="${posix_adapter__flag__kernel_name}"
  posix_adapter__decision="${posix_adapter__decision}${posix_adapter__flag__kernel_release}"
  posix_adapter__decision="${posix_adapter__decision}${posix_adapter__flag__machine}"

  _posix_adapter__uname__common \
    "$posix_adapter__decision"
}

#==============================================================================
# Common call mapping function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] decision_string - String that decodes the optional parameter presence.
# STDIN:
#   Input passed to the mapped command.
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   Mapped command's output.
# STDERR:
#   Mapped command's error output. Mapping error output.
# Status:
#   0  - Call succeeded.
#   .. - Call failed with it's error status
#==============================================================================
_posix_adapter__uname__common() {
  posix_adapter__decision_string="$1"

  case "$posix_adapter__decision_string" in
  # ,------ kernel_name
  # |,----- kernel_release
  # ||,---- machine
    000)
      uname \
        \
        \
        \

      ;;
  # ,------ kernel_name
  # |,----- kernel_release
  # ||,---- machine
    001)
      uname \
        \
        \
        -m \

      ;;
  # ,------ kernel_name
  # |,----- kernel_release
  # ||,---- machine
    010)
      uname \
        \
        -r \
        \

      ;;
  # ,------ kernel_name
  # |,----- kernel_release
  # ||,---- machine
    011)
      uname \
        \
        -r \
        -m \

      ;;
  # ,------ kernel_name
  # |,----- kernel_release
  # ||,---- machine
    100)
      uname \
        -s \
        \
        \

      ;;
  # ,------ kernel_name
  # |,----- kernel_release
  # ||,---- machine
    101)
      uname \
        -s \
        \
        -m \

      ;;
  # ,------ kernel_name
  # |,----- kernel_release
  # ||,---- machine
    111)
      uname \
        -s \
        -r \
        -m \

      ;;
    *)
      _report_incompatible_call \
        'Unexpected parameter combination!' \
        'You can only use the available options.'
      ;;
  esac
}

#==============================================================================
# Invalid parameter error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   TOOL_NAME
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   98  - The function will terminate the execution.
#==============================================================================
_report_invalid_parameter() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | ${TOOL_NAME} | reason  | ${reason}"
  >&2 echo "ERROR | ${TOOL_NAME} | details | ${details}"
  _print_help
  exit 98
}

#==============================================================================
# Incompatible call error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   TOOL_NAME
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   99  - The function will terminate the execution.
#==============================================================================
_report_incompatible_call() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | ${TOOL_NAME} | reason  | ${reason}"
  >&2 echo "ERROR | ${TOOL_NAME} | details | ${details}"
  _print_help
  exit 99
}

#==============================================================================
# ENTRY POINT
#==============================================================================

_posix_adapter__uname "$@"
