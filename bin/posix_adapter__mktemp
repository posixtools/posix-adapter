#!/bin/sh
#==============================================================================
#             _    _
#   _ __ ___ | | _| |_ ___ _ __ ___  _ __
#  | '_ ` _ \| |/ / __/ _ \ '_ ` _ \| '_ \
#  | | | | | |   <| ||  __/ | | | | | |_) |
#  |_| |_| |_|_|\_\\__\___|_| |_| |_| .__/
#===================================|_|========================================
# TOOL: MKTEMP
#==============================================================================

TOOL_NAME='posix_adapter__mktemp'

_print_help() {
  >&2 echo '=============================================================================='
  >&2 echo ''
  >&2 echo '  posix_adapter__mktemp --help'
  >&2 echo '  posix_adapter__mktemp [--directory] [--tmpdir <path>] <template>'
  >&2 echo ''
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Execution mapping function for the "mktemp" command line tool with a'
  >&2 echo ' uniform interface.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Globals:'
  >&2 echo '   None'
  >&2 echo ' Options:'
  >&2 echo '   --help - Prints out the help message and exits.'
  >&2 echo '   --directory - Flag that indicates that a directory should be made.'
  >&2 echo '   --tmpdir <path> - Path prefix where the temp file/directory should be'
  >&2 echo '                     created into based on the template.'
  >&2 echo ' Arguments:'
  >&2 echo '   [1] tempate - mktemp compatible template definition.'
  >&2 echo ' STDIN:'
  >&2 echo '   Input passed to the mapped command.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Output variables:'
  >&2 echo '   None'
  >&2 echo ' STDOUT:'
  >&2 echo '   Output of the mapped command.'
  >&2 echo ' STDERR:'
  >&2 echo '   Error output of the mapped command.'
  >&2 echo ' Status:'
  >&2 echo '   0  - Call was successful.'
  >&2 echo '   .. - Call failed with its error status.'
  >&2 echo '   98 - Invalid parameter configuration.'
  >&2 echo '   99 - No compatible call style was found.'
  >&2 echo '=============================================================================='
}

_posix_adapter__mktemp() {
  posix_adapter__flag__directory='0'

  posix_adapter__flag__tmpdir='0'
  posix_adapter__value__tmpdir=''

  posix_adapter__flag__template='0'
  posix_adapter__value__template=''

  while [ "$#" -gt '0' ]
  do
    case "$1" in
      --directory)
        posix_adapter__flag__directory='1'
        shift
        ;;
      --tmpdir)
        posix_adapter__flag__tmpdir='1'
        posix_adapter__value__tmpdir="$2"
        shift
        shift
        ;;
      --[!-]*)
        _report_invalid_parameter \
          "Unexpected option '${1}'!" \
          'You can only use the available options.'
        ;;
      -[!-]*)
        _report_invalid_parameter \
          "Invalid single dashed option '${1}'!" \
          "posix_adapter only uses double dashed options like '--option'."
        ;;
      *)
        if [ "$posix_adapter__flag__template" -eq '0' ]
        then
          posix_adapter__flag__template='1'
          posix_adapter__value__template="$1"
          shift
        else
          _report_invalid_parameter \
            'Unexpected parameter!' \
            "Parameter '${1}' is unexpected!"
        fi
        ;;
    esac
  done

  if [ "$posix_adapter__flag__template" -eq '0' ]
  then
    _report_invalid_parameter \
      'Missing <template> argument!' \
      'To be able to use grep, you need to specify at least a pattern.'
  fi

  # Assembling the decision string.
  # ,--- directory
  # |,-- tempdir
  # 00
  posix_adapter__decision="${posix_adapter__flag__directory}"
  posix_adapter__decision="${posix_adapter__decision}${posix_adapter__flag__tmpdir}"

  case "$(uname -s)" in
    Linux)
      _posix_adapter__mktemp__linux \
        "$posix_adapter__decision" \
        "$posix_adapter__value__tmpdir" \
        "$posix_adapter__value__template"
      ;;

    Darwin)
      _posix_adapter__mktemp__darwin \
        "$posix_adapter__decision" \
        "$posix_adapter__value__tmpdir" \
        "$posix_adapter__value__template"
      ;;

    *)
      _report_incompatible_call \
        "Unsupported platform '$(uname -s)'!" \
        'The tool is only implemented for Linux and Darwin so far.'
      ;;
  esac
}

#==============================================================================
# Linux based call mapping function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] decision_string - String that decodes the optional parameter presence.
#   [2] value_tmpdir - Tmpdir value.
#   [3] value_template - mktemp compatible template definition.
# STDIN:
#   Input passed to the mapped command.
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   Mapped command's output.
# STDERR:
#   Mapped command's error output. Mapping error output.
# Status:
#   0  - Call succeeded.
#   .. - Call failed with it's error status
#==============================================================================
_posix_adapter__mktemp__linux() {
  posix_adapter__decision_string="$1"
  posix_adapter__value__tmpdir="$2"
  posix_adapter__value__template="$3"

  case "$posix_adapter__decision_string" in
  # ,--- directory
  # |,-- tempdir
    00)
      mktemp \
        \
        \
        "$posix_adapter__value__template" \

      ;;
  # ,--- directory
  # |,-- tempdir
    01)
      mktemp \
        \
        --tmpdir="$posix_adapter__value__tmpdir" \
        "$posix_adapter__value__template" \

      ;;
  # ,--- directory
  # |,-- tempdir
    10)
      mktemp \
        --directory \
        \
        "$posix_adapter__value__template" \

      ;;
  # ,--- directory
  # |,-- tempdir
    11)
      mktemp \
        --directory \
        --tmpdir="$posix_adapter__value__tmpdir" \
        "$posix_adapter__value__template" \

      ;;
    *)
      _report_incompatible_call \
        'Unexpected parameter combination!' \
        'You can only have --directory --tmpdir.'
      ;;
  esac
}

#==============================================================================
# Darwin based call mapping function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] decision_string - String that decodes the optional parameter presence.
#   [2] value_tmpdir - Tmpdir value.
#   [3] value_template - mktemp compatible template definition.
# STDIN:
#   Input passed to the mapped command.
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   Mapped command's output.
# STDERR:
#   Mapped command's error output. Mapping error output.
# Status:
#   0  - Call succeeded.
#   .. - Call failed with it's error status
#==============================================================================
_posix_adapter__mktemp__darwin() {
  posix_adapter__decision_string="$1"
  posix_adapter__value__tmpdir="$2"
  posix_adapter__value__template="$3"

  case "$posix_adapter__decision_string" in
  # ,--- directory
  # |,-- tempdir
    00)
      mktemp \
        \
        "$posix_adapter__value__template" \

      ;;
  # ,--- directory
  # |,-- tempdir
    01)
      mktemp \
        \
        "${posix_adapter__value__tmpdir}/${posix_adapter__value__template}" \

      ;;
  # ,--- directory
  # |,-- tempdir
    10)
      mktemp \
        -d \
        "$posix_adapter__value__template" \

      ;;
  # ,--- directory
  # |,-- tempdir
    11)
      mktemp \
        -d \
        "${posix_adapter__value__tmpdir}/${posix_adapter__value__template}" \

      ;;
    *)
      _report_incompatible_call \
        'Unexpected parameter combination!' \
        'You can only use the available options.'
      ;;
  esac
}

#==============================================================================
# Invalid parameter error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   TOOL_NAME
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   98  - The function will terminate the execution.
#==============================================================================
_report_invalid_parameter() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | ${TOOL_NAME} | reason  | ${reason}"
  >&2 echo "ERROR | ${TOOL_NAME} | details | ${details}"
  _print_help
  exit 98
}

#==============================================================================
# Incompatible call error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   TOOL_NAME
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   99  - The function will terminate the execution.
#==============================================================================
_report_incompatible_call() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | ${TOOL_NAME} | reason  | ${reason}"
  >&2 echo "ERROR | ${TOOL_NAME} | details | ${details}"
  _print_help
  exit 99
}

#==============================================================================
# ENTRY POINT
#==============================================================================

_posix_adapter__mktemp "$@"
