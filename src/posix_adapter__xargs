#!/bin/sh
#==============================================================================
#
# __  ____ _ _ __ __ _ ___
# \ \/ / _` | '__/ _` / __|
#  >  < (_| | | | (_| \__ \
# /_/\_\__,_|_|  \__, |___/
#================|___/=========================================================
# TOOL: XARGS
#==============================================================================

_posix_adapter__xargs__print_help() {
  >&2 echo '=============================================================================='
  >&2 echo ''
  >&2 echo '  posix_adapter__xargs --help'
  >&2 echo '  posix_adapter__xargs [--null] [--replace <replace_string>]'
  >&2 echo '      [--max-args <arg_count>] [..]'
  >&2 echo ''
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Execution mapping function for the "xargs" command line tool with a uniform'
  >&2 echo ' interface.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Globals:'
  >&2 echo '   None'
  >&2 echo ' Options:'
  >&2 echo '   --help - Prints out the help message and exits.'
  >&2 echo '   --null - xargs compatible -0 flag.'
  >&2 echo '   --replace <replace_string> - xargs compatible -I flag.'
  >&2 echo '   --max-args - xargs compatible -n flag.'
  >&2 echo ' Arguments:'
  >&2 echo '   None'
  >&2 echo ' STDIN:'
  >&2 echo '   Standard input for the command.'
  >&2 echo '------------------------------------------------------------------------------'
  >&2 echo ' Output variables:'
  >&2 echo '   None'
  >&2 echo ' STDOUT:'
  >&2 echo '   Output of the mapped command.'
  >&2 echo ' STDERR:'
  >&2 echo '   Error output of the mapped command.'
  >&2 echo ' Status:'
  >&2 echo '   0  - Call was successful.'
  >&2 echo '   .. - Call failed with its error status.'
  >&2 echo '   98 - Invalid parameter configuration.'
  >&2 echo '   99 - No compatible call style was found.'
  >&2 echo '=============================================================================='
}

posix_adapter__xargs() {
  posix_adapter__flag__null='0'

  posix_adapter__flag__replace='0'
  posix_adapter__value__replace='0'

  posix_adapter__flag__max_args='0'
  posix_adapter__value__max_args='0'

  while [ "$#" -gt '0' ]
  do
    case "$1" in
      --null)
        posix_adapter__flag__null='1'
        shift
        ;;
      --replace)
        posix_adapter__flag__replace='1'
        posix_adapter__value__replace="$2"
        shift
        shift
        ;;
      --max-args)
        posix_adapter__flag__max_args='1'
        posix_adapter__value__max_args="$2"
        shift
        shift
        ;;
      --[!-]*)
        _posix_adapter__xargs__report_invalid_parameter \
          "Unexpected option '${1}'!" \
          'You can only use the available options.'
        ;;
      -[!-]*)
        _posix_adapter__xargs__report_invalid_parameter \
          "Invalid single dashed option '${1}'!" \
          "posix_adapter only uses double dashed options like '--option'."
        ;;
      *)
        # We are breaking here to have all the additional parameters available
        # in the '@' variable.
        break
        ;;
    esac
  done

  # Assembling the decision string.
  # ,------ null
  # |,----- replace
  # ||,---- max_args
  # 000
  posix_adapter__decision="${posix_adapter__flag__null}"
  posix_adapter__decision="${posix_adapter__decision}${posix_adapter__flag__replace}"
  posix_adapter__decision="${posix_adapter__decision}${posix_adapter__flag__max_args}"

  _posix_adapter__xargs__common \
    "$posix_adapter__decision" \
    "$posix_adapter__value__replace" \
    "$posix_adapter__value__max_args" \
    "$@"
}

#==============================================================================
# Common call mapping function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] decision_string - String that decodes the optional parameter presence.
#   [2] value_replace - Value for the replace option.
#   [3] value_max_args - Value for the max args option.
#   [..] additionals - Additional variables.
# STDIN:
#   Input passed to the mapped command.
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   Mapped command's output.
# STDERR:
#   Mapped command's error output. Mapping error output.
# Status:
#   0  - Call succeeded.
#   .. - Call failed with it's error status
#==============================================================================
_posix_adapter__xargs__common() {
  posix_adapter__decision_string="$1"
  shift
  posix_adapter__value__replace="$1"
  shift
  posix_adapter__value__max_args="$1"
  shift

  case "$posix_adapter__decision_string" in
  # ,------ null
  # |,----- replace
  # ||,---- max_args
    000)
      xargs \
        \
        \
        \
        "$@" \

      ;;
  # ,------ null
  # |,----- replace
  # ||,---- max_args
    001)
      xargs \
        \
        \
        -n "$posix_adapter__value__max_args" \
        "$@" \

      ;;
  # ,------ null
  # |,----- replace
  # ||,---- max_args
    010)
      xargs \
        \
        -I "$posix_adapter__value__replace" \
        \
        "$@" \

      ;;
  # ,------ null
  # |,----- replace
  # ||,---- max_args
    011)
      xargs \
        \
        -I "$posix_adapter__value__replace" \
        -n "$posix_adapter__value__max_args" \
        "$@" \

      ;;
  # ,------ null
  # |,----- replace
  # ||,---- max_args
    100)
      xargs \
        -0 \
        \
        \
        "$@" \

      ;;
  # ,------ null
  # |,----- replace
  # ||,---- max_args
    101)
      xargs \
        -0 \
        \
        -n "$posix_adapter__value__max_args" \
        "$@" \

      ;;
  # ,------ null
  # |,----- replace
  # ||,---- max_args
    110)
      xargs \
        -0 \
        -I "$posix_adapter__value__replace" \
        \
        "$@" \

      ;;
  # ,------ null
  # |,----- replace
  # ||,---- max_args
    111)
      xargs \
        -0 \
        -I "$posix_adapter__value__replace" \
        -n "$posix_adapter__value__max_args" \
        "$@" \

      ;;
    *)
      _posix_adapter__xargs__report_incompatible_call \
        'Unexpected parameter combination!' \
        'You can only use the available options.'
      ;;
  esac
}

#==============================================================================
# Invalid parameter error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   98  - The function will terminate the execution.
#==============================================================================
_posix_adapter__xargs__report_invalid_parameter() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | posix_adapter__xargs | reason  | ${reason}"
  >&2 echo "ERROR | posix_adapter__xargs | details | ${details}"
  _posix_adapter__xargs__print_help
  exit 98
}

#==============================================================================
# Incompatible call error reporting helper function.
#------------------------------------------------------------------------------
# Globals:
#   None
# Options:
#   None
# Arguments:
#   [1] reason - Reason of the error.
#   [2] details - More details about the error.
# STDIN:
#   None
#------------------------------------------------------------------------------
# Output variables:
#   None
# STDOUT:
#   None
# STDERR:
#   Reported error.
# Status:
#   99  - The function will terminate the execution.
#==============================================================================
_posix_adapter__xargs__report_incompatible_call() {
  reason="$1"
  details="$2"
  >&2 echo "ERROR | posix_adapter__xargs | reason  | ${reason}"
  >&2 echo "ERROR | posix_adapter__xargs | details | ${details}"
  _posix_adapter__xargs__print_help
  exit 99
}

#==============================================================================
# ENTRY POINT
#==============================================================================

# If the script is called directly, call the internal function.
case $0 in
  *posix_adapter__xargs)
    posix_adapter__xargs "$@"
    ;;
esac
